@startuml
package "sysfit" {

    ' *** Camada de Persistência (Persistence) ***
    package "persistence" {
        class Usuario {
            +id: int
            +nome: String
            +email: String
            +senha: String
            +cadastrar()
            +autenticar()
            +editarPerfil(nome: String, senha: String)
        }
    }

    ' *** Camada de Persistência (PersistenceLayer) ***
    package "persistencelayer" {

        ' --- DAO (Data Access Object) ---
        package "DAO" {
            interface IUserDAO {
                +boolean create(Usuario user)
                +List<Usuario> find()
                +Usuario findByEmail(email: String)
            }
            class UserDAO {
                +boolean create(Usuario user)
                +List<Usuario> find()
                +Usuario findByEmail(email: String)
            }
            IUserDAO <|.. UserDAO
        }

        ' --- Model ---
        package "model" {
            class Jogador {
                +ranking: int
                +time: String
                +visualizarRanking()
                +getRanking(): int
            }
            class Partida {
                +id: int
                +jogadores: Jogador[4]
                +tabuleiroEstado: String ' Tabuleiro agora é um atributo interno
                +status: String
                +historicoMovimentos: Movimento[]
                +iniciarPartida()
                +finalizarPartida()
                +registrarMovimento()
                +verHistoricoPartida()
                +atualizarTabuleiroEstado()
                +validarMovimento()
            }
            class Movimento {
                +id: int
                +peca: String
                +posicaoInicial: String
                +posicaoFinal: String
                +valido: boolean
                +dataHora: DateTime
                +validarMovimento()
                +executarMovimento()
            }
            class Ranking {
                +id: int
                +jogador: Jogador
                +pontuacao: int
                +vitorias: int
                +derrotas: int
                +atualizarRanking()
                +visualizarRanking()
                +calcularPontuacao()
            }
        }
        
        ' --- Controller ---
        package "controller" {
            interface IUserController {
                +Usuario create(Usuario user)
                +boolean login(Usuario user)
                +boolean recuperarSenha(email: String)
            }
            class UserController {
                +Usuario create(Usuario user)
                +boolean login(Usuario user)
                +boolean recuperarSenha(email: String)
            }
            IUserController <|.. UserController
        }
    }

    ' *** Camada de Serviço (ServiceLayer) ***
    package "servicelayer" {

        ' --- DTO (Data Transfer Object) ---
        package "DTO" {
            class UserLoginReq {
                "email": String
                "password": String
            }
            class UserLoginRes {
                "msgcode": "001"
                "userobject": "{}"
            }
            class UserCreateReq {
                "email": String
                "password": String
                "confpassword": String
            }
            class UserCreateRes {
                "msgcode": "002"
                "userobject": "{}"
            }
        }

        ' --- Serviço de Sugestão de Jogadas ---
        package "SuggestionService" {
            class SugestaoJogada {
                +id: int
                +jogador: Jogador
                +movimentoSugerido: Movimento
                +gerarSugestao()
                +aceitarSugestao()
            }
        }

        ' --- Serviço de Email (Recuperação de Senha) ---
        package "EmailService" {
            class EmailService {
                +boolean sendPasswordResetEmail(email: String, token: String)
            }
        }

        ' --- View (Interface com o usuário) ---
        package "View" {
            interface IRoutes {
                +void createroutes()
            }
            class UserRoutes {
                +void createroutes()
            }
            IRoutes <|.. UserRoutes
        }
    }

    ' *** Relacionamentos ***
    Usuario <|-- Jogador
    Partida "1" -- "4" Jogador : Participa
    Partida "1" -- "*" Movimento : Registra jogadas
    Jogador "1" -- "1" Ranking : Está associado
    Jogador "1" -- "*" SugestaoJogada : Pode sugerir jogadas
    Movimento "1" -- "1" SugestaoJogada : Ligado as sugestões

    ' Dependência do UserController ao EmailService para recuperação de senha
    persistencelayer.controller.UserController ..> servicelayer.EmailService : calls sendPasswordResetEmail()
}
@enduml